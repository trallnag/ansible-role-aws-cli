version: "3"

tasks:
  default:
    cmds:
      - task: init
      - task: format
      - task: lint
      - task: test

  init:
    desc: Initialize environment.
    cmds:
      - pre-commit install --install-hooks
      - pre-commit install --install-hooks --hook-type commit-msg
      - poetry self add poetry-plugin-up
      - poetry install

  update:
    desc: Update dependencies.
    cmds:
      - pre-commit autoupdate
      - poetry self update
      - poetry self add poetry-plugin-up@latest
      - poetry up --latest

  format:
    desc: >-
      Run formatters.
      Used in GitHub Actions workflow(s).
    cmds:
      - cmd: x="pre-commit run --all-files {{ .ITEM }}" && ($x || $x)
        for:
          - end-of-file-fixer
          - fix-byte-order-marker
          - trailing-whitespace
          - mixed-line-ending
          - prettier
          - yamlfmt

  lint:
    desc: >-
      Run linters.
      Used in GitHub Actions workflow(s).
    cmds:
      - cmd: pre-commit run --all-files {{ .ITEM }}
        for:
          - check-added-large-files
          - check-merge-conflict
          - check-vcs-permalinks
          - forbid-new-submodules
          - check-executables-have-shebangs
          - check-shebang-scripts-are-executable
          - check-yaml
          - check-case-conflict
          - detect-aws-credentials
          - detect-private-key
          - check-copier-rejection
      - poetry run ansible-lint

  test:
    desc: >-
      Run tests.
      Used in GitHub Actions workflow(s).
    vars:
      scenario: '{{ .scenario | default "all" }}'
    cmds:
      - >-
        {{- if eq .scenario "all" -}}
          poetry run molecule test --all
        {{- else -}}
          poetry run molecule test -s {{ .scenario }}
        {{- end -}}

  run:
    desc: Run role against localhost.
    cmds:
      - poetry run ansible-playbook playbook.yaml

  extract-release-notes:
    desc: >-
      Extract release notes.
      Used in GitHub Actions workflow(s).
    cmds:
      - mkdir -p tmp
      - scripts/extract-release-notes.py --input CHANGELOG.md --output tmp/release.md
      - mdformat --wrap=10000 tmp/release.md
