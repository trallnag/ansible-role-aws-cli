name: Release

#
# Releases a new version of this project.
#
# Make sure to prepare the project for a new release (see docs for more).
#
# Requires GALAXY_API_KEY secret to be present.
#

on:
  push:
    tags:
      - v*.*.*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment:
      name: Galaxy
      url: https://galaxy.ansible.com/ui/standalone/roles/trallnag/aws_cli
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Determine release-version
        id: determine-release-version
        run: |
          release_version=$(echo "${GITHUB_REF#refs/*/}" | cut -c 2-)
          echo "release-version=$release_version" | tee -a $GITHUB_OUTPUT

      - name: Determine release-name
        id: determine-release-name
        run: |
          release_name="${{ steps.determine-release-version.outputs.release-version }} / $(date +%Y-%m-%d)"
          echo "release-name=$release_name" | tee -a $GITHUB_OUTPUT

      - name: Set up just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: pyproject.toml

      - name: Set up Astral uv
        uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1 # v6.3.0
        with:
          enable-cache: true
          cache-suffix: release
          cache-dependency-glob: |
            uv.lock

      - name: Determine mdformat version
        id: determine-mdformat-version
        run: |
          mdformat_version=$(
            grep \
              --extended-regexp \
              --only-matching \
              --regexp='"pipx:mdformat" = ".+"' \
              mise.toml \
              | cut -c20- | rev | cut -c2- | rev
          )
          echo "mdformat-version=$mdformat_version" | tee -a $GITHUB_OUTPUT

      - name: Install mdformat
        run: uv tool install "mdformat@${{ steps.determine-mdformat-version.outputs.mdformat-version }}"

      - name: Create release notes
        run: just create-release-notes

      - name: Import to Ansible Galaxy
        run: >-
          uv run ansible-galaxy role import
          --server https://galaxy.ansible.com/api/
          --token "${{ secrets.ANSIBLE_GALAXY_API_TOKEN }}"
          --role-name aws_cli
          "${{ github.event.repository.owner.login }}"
          "${{ github.event.repository.name }}"

      - name: Create GitHub release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          name: ${{ steps.determine-release-name.outputs.release-name }}
          body_path: .tmp/release-notes.md
          draft: true
